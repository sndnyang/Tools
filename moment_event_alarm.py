#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.5 (standalone edition) on Wed Mar 27 12:15:51 2013

import wx
import time
import os

# begin wxGlade: extracode
# end wxGlade

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)

        #get ready for timer
        self.last_time = 0
        self.timer = wx.Timer(self, wx.ID_ANY)
        self.Bind(wx.EVT_TIMER, self.TimeOver, self.timer)

        self.label_4 = wx.StaticText(self, -1, "Moment :")
        self.moment_text = wx.TextCtrl(self, -1, "")
        self.now_time = wx.Button(self, -1, "Now")
        self.label_3 = wx.StaticText(self, -1, "Event :")
        self.moment_event = wx.TextCtrl(self, -1, "")
        self.moment_record = wx.Button(self, -1, "Record")
        self.moment_clear = wx.Button(self, -1, "Clear")
        self.label_5 = wx.StaticText(self, -1, "Start Time :")
        self.start_time = wx.TextCtrl(self, -1, "")
        self.alarm_now = wx.Button(self, -1, "Now")
        self.label_6 = wx.StaticText(self, -1, "Last  Time :")
        self.last_time = wx.TextCtrl(self, -1, "")
        self.thirty_m = wx.Button(self, -1, "30")
        self.ff_m = wx.Button(self, -1, "45")
        self.sixty_m = wx.Button(self, -1, "60")
        self.label_7 = wx.StaticText(self, -1, "End   Time :")
        self.end_time = wx.TextCtrl(self, -1, "")
        self.gen_end_button = wx.Button(self, -1, "Generate")
        self.alarm_event = wx.TextCtrl(self, -1, "")
        self.event_button = wx.Button(self, -1, "Record")
        self.alarm_start = wx.Button(self, -1, "Start")
        self.alarm_clear = wx.Button(self, wx.ID_CLEAR, "")
        self.quit_button = wx.Button(self, wx.ID_EXIT, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnMomentNow, self.now_time)
        self.Bind(wx.EVT_BUTTON, self.OnMomentRecord, self.moment_record)
        self.Bind(wx.EVT_BUTTON, self.OnClearMoment, self.moment_clear)
        self.Bind(wx.EVT_BUTTON, self.OnAlarmNow, self.alarm_now)
        self.Bind(wx.EVT_BUTTON, self.OnGenThirty, self.thirty_m)
        self.Bind(wx.EVT_BUTTON, self.OnGenFourFive, self.ff_m)
        self.Bind(wx.EVT_BUTTON, self.OnGenSixty, self.sixty_m)
        self.Bind(wx.EVT_BUTTON, self.OnGenEnd, self.gen_end_button)
        self.Bind(wx.EVT_BUTTON, self.OnEventAlarm, self.event_button)
        self.Bind(wx.EVT_BUTTON, self.OnAlarmStart, self.alarm_start)
        self.Bind(wx.EVT_BUTTON, self.OnClearAlarm, self.alarm_clear)
        self.Bind(wx.EVT_BUTTON, self.OnClose, self.quit_button)
        # end wxGlade

        self.Bind(wx.EVT_CLOSE, self.CloseWindow)

    def CloseWindow(self, event):
        self.Destroy()

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("Event Record")
        self.label_4.SetMinSize((55, 14))
        self.label_3.SetMinSize((55, 14))
        self.thirty_m.SetMinSize((25, 24))
        self.ff_m.SetMinSize((25, 24))
        self.sixty_m.SetMinSize((25, 24))
        self.event_button.SetMinSize((126,30))
        self.alarm_start.SetMinSize((106, 30))
        self.alarm_clear.SetMinSize((107, 30))
        self.quit_button.SetMinSize((75, 40))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_14 = wx.BoxSizer(wx.VERTICAL)
        sizer_17 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_16 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_18 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_15 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_13.Add(self.label_4, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_13.Add(self.moment_text, 1, wx.LEFT | wx.TOP | wx.BOTTOM | wx.EXPAND, 3)
        sizer_13.Add(self.now_time, 0, wx.LEFT | wx.RIGHT | wx.TOP, 3)
        sizer_10.Add(sizer_13, 1, wx.TOP | wx.BOTTOM | wx.EXPAND, 3)
        sizer_12.Add(self.label_3, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_12.Add(self.moment_event, 1, wx.LEFT | wx.RIGHT | wx.EXPAND, 3)
        sizer_10.Add(sizer_12, 1, wx.TOP | wx.BOTTOM | wx.EXPAND, 2)
        sizer_11.Add(self.moment_record, 1, wx.LEFT | wx.RIGHT | wx.EXPAND, 10)
        sizer_11.Add(self.moment_clear, 1, wx.LEFT | wx.RIGHT | wx.EXPAND, 10)
        sizer_10.Add(sizer_11, 1, wx.TOP | wx.BOTTOM | wx.EXPAND, 2)
        sizer_3.Add(sizer_10, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_3, 0, wx.EXPAND, 0)
        sizer_15.Add(self.label_5, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_15.Add(self.start_time, 1, wx.ALL | wx.EXPAND, 3)
        sizer_15.Add(self.alarm_now, 1, wx.ALL | wx.EXPAND, 3)
        sizer_14.Add(sizer_15, 1, wx.EXPAND, 0)
        sizer_16.Add(self.label_6, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_16.Add(self.last_time, 0, wx.ALL | wx.EXPAND, 3)
        sizer_18.Add(self.thirty_m, 0, 0, 0)
        sizer_18.Add(self.ff_m, 0, 0, 0)
        sizer_18.Add(self.sixty_m, 0, wx.EXPAND, 3)
        sizer_16.Add(sizer_18, 0, wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_14.Add(sizer_16, 1, wx.EXPAND, 0)
        sizer_17.Add(self.label_7, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_17.Add(self.end_time, 2, wx.ALL | wx.EXPAND, 3)
        sizer_17.Add(self.gen_end_button, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_14.Add(sizer_17, 1, wx.EXPAND, 0)
        sizer_6.Add(sizer_14, 1, wx.EXPAND, 0)
        label_1 = wx.StaticText(self, -1, "Event :", style=wx.ALIGN_CENTRE)
        label_1.SetMinSize((60, 25))
        label_1.SetBackgroundColour(wx.Colour(240, 240, 240))
        label_1.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        sizer_7.Add(label_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_7.Add(self.alarm_event, 1, wx.LEFT | wx.RIGHT | wx.EXPAND, 6)
        sizer_6.Add(sizer_7, 1, wx.TOP | wx.BOTTOM | wx.EXPAND, 6)
        sizer_2.Add(sizer_6, 1, wx.EXPAND, 0)
        sizer_5.Add(self.event_button, 1, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 10)
        sizer_5.Add(self.alarm_start, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 10)
        sizer_5.Add(self.alarm_clear, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 10)
        sizer_2.Add(sizer_5, 0, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        sizer_1.Add(self.quit_button, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

    def OnMomentNow(self, event):  # wxGlade: MyFrame.<event_handler>
        now_time = time.asctime()
        self.moment_text.SetValue(now_time)

    def get_time(self, text_ctrl):

        the_time = text_ctrl.GetValue()
        
        if the_time == '': 
            the_time = time.time()
            text_ctrl.SetValue(time.asctime())
            return the_time

        try :                
            string = time.strptime(the_time, "%a %b %d %H:%M:%S %Y")
            the_time = time.mktime(string)
            return the_time
            
        except ValueError:
            message = wx.MessageDialog(None, "Error Input Type", 'Warnning',
                                    wx.YES_NO)
                
            if message.ShowModal():
                pass
            message.Destroy()
            return -1
    
    def OnMomentRecord(self, event):  # wxGlade: MyFrame.<event_handler>

        event = self.moment_event.GetValue()
        moment = time.ctime(self.get_time(self.moment_text))
        struct_time = moment.split()

        day = int(struct_time[2])
        
        if event == '':
            error_flag = "No Event, What you do?"
            message = wx.MessageDialog(None, error_flag,
                                       'Warnning', wx.YES_NO)
            if message.ShowModal():
                pass
            message.Destroy()
            return       

        name = str(struct_time[1] + '_' + struct_time[2] + '_' + struct_time[-1] + '.txt')
        parent_path = "F:\\self\\moment_record\\"

        target_file = file(parent_path + name, 'a')
        target_file.write(struct_time[-2] + " --> " + event + '\n')
        target_file.close()
        

    def OnClearMoment(self, event):  # wxGlade: MyFrame.<event_handler>
        self.moment_text.SetValue('')
        self.moment_event.SetValue('')

    def OnAlarmNow(self, event):  # wxGlade: MyFrame.<event_handler>
        now_time = time.asctime()
        self.start_time.SetValue(now_time)

    def TimeOver(self, event):
        self.timer.Stop()
        self.timer.Destroy()
        self.OnEventAlarm(event)
        
        self.alarm_start.SetLabel("Start")
        self.last_time.SetValue('')
        self.start_time.SetValue('')
        self.end_time.SetValue('')
        self.alarm_event.SetValue('')

        cmd = r'''"C:\Program Files\Windows Media Player\wmplayer.exe" /play E:\music\chinese\海阔天空.mp3'''
        os.popen(cmd)

    def OnEventAlarm(self, event):  # wxGlade: MyFrame.<event_handler>

        start = self.get_time(self.start_time)
        end   = self.get_time(self.end_time)

        last = (end - start) / 60
        event = self.alarm_event.GetValue()

        start_str = time.ctime(start)
        end_str = time.ctime(end)
        struct_time = start_str.split()

        day = int(struct_time[2])
        
        if event == '':
            error_flag = "No Event, What you do?"
            message = wx.MessageDialog(None, error_flag,
                                       'Warnning', wx.YES_NO)
            if message.ShowModal():
                pass
            message.Destroy()
            return       

        name = str(struct_time[1] + '_' + struct_time[2] + '_' + struct_time[-1] + '.txt')

        parent_path = "F:\\self\\event_record\\"

        target_file = file(parent_path + name, 'a')
        target_file.write(start_str.split()[-2] + " to " + end_str.split()[-2] + \
                          '  %5.2f  '%last + ' --> ' + event + '\n')
        target_file.close()

        
    def OnAlarmStart(self, event):  # wxGlade: MyFrame.<event_handler>

        if self.timer.IsRunning():            
            self.timer.Stop()
            self.alarm_start.SetLabel("Start")
            self.last_time.SetValue('')
            
        else :
            last_time = self.OnGenEnd(event)
            self.alarm_start.SetLabel("Stop")
            if last_time > 0:
                self.timer.Start(last_time * 60000)      #an EVT_TIMER every 1 second
                
    def OnClearAlarm(self, event):  # wxGlade: MyFrame.<event_handler>
        self.last_time.SetValue('')
        self.start_time.SetValue('')
        self.end_time.SetValue('')
        self.alarm_event.SetValue('')

    def OnGenThirty(self, event):  # wxGlade: MyFrame.<event_handler>
        self.last_time.SetValue('30')

    def OnGenFourFive(self, event):  # wxGlade: MyFrame.<event_handler>
        self.last_time.SetValue('45')

    def OnGenSixty(self, event):  # wxGlade: MyFrame.<event_handler>
        self.last_time.SetValue('60')

    def OnGenEnd(self, event):  # wxGlade: MyFrame.<event_handler>

        try :
            
            last_time = self.last_time.GetValue()            
            start_time = self.get_time(self.start_time)

            if start_time > 0 and last_time == '':
                end_time = self.get_time(self.end_time)
                
                if end_time < 0:
                    end_time = time.time()
                    self.end_time.SetValue(time.asctime())
                elif end_time < time.time():
                    return -1
                    
                last_time = (end_time  - start_time) / 60
                self.last_time.SetValue('%.2f'%last_time)
                
                return last_time
            
            last_time = float(last_time) * 60            
                
            if start_time > 0 and last_time > 0 :
                end_time = start_time + float(last_time)
                self.end_time.SetValue(time.ctime(end_time))

            return last_time
        
        except ValueError:
            
            message = wx.MessageDialog(None, "None of Last time or start time",
                                       'Warnning', wx.YES_NO)
                
            if message.ShowModal():
                    pass
            message.Destroy()

            return -1
        
    def OnClose(self, event):  # wxGlade: MyFrame.<event_handler>
        self.Close(True)

# end of class MyFrame
if __name__ == "__main__":
    moment_event_alarm = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    main_frame = MyFrame(None, -1, "")
    moment_event_alarm.SetTopWindow(main_frame)
    main_frame.Show()
    moment_event_alarm.MainLoop()
